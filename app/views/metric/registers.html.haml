.pusher
  %div.main.ui.container
    %h1.ui.header.blue.centered.block Registros
    
    .ui.statistics.four.column.grid.small{:style => "margin-top: 20px;"}
      .statistic
        .value.icon-gradient
          %i.doctor.icon.icon-gradient
          = @doctors.count
        .label.icon-gradient
          Doctores
      .statistic
        .value.icon-gradient
          %i.hospital.icon.icon-gradient
          = @centers.count
        .label.icon-gradient
          Centros
      .statistic
        .value.icon-gradient
          %i.first.aid.icon.icon-gradient
          = @drugstores.count
        .label.icon-gradient
          Farmacias
      .statistic
        .value.icon-gradient
          %i.calendar.icon.icon-gradient
          = @plannings.count
        .label.icon-gradient
          Planeamientos


    %br

    .ui.dividing.header.blue
      Especialidades en Total  
    - if current_user.admin

      -# new table --------------

      %table.ui.sortable.celled.table.striped.teal.gridtable{:style => "margin-bottom: 0px;"}
        %thead
          %tr
            %th Especialidad
            %th Cant. de Doctores
            %th Vistos
            %th Por Visitar
            %th.six.wide % Cumplido                    
      %div.scrollx{:style => "overflow-y:scroll; height: 600px; width: 101%;"}        
        %table.ui.sortable.celled.table.striped.blue.gridtable{:style => "border-top: none;"}
          %thead{:style => "visibility: hidden"}
            %tr
              %th Especialidad
              %th Cant. de Doctores
              %th Vistos
              %th Por Visitar
              %th.six.wide % Cumplido
          %tbody
            - Doctor::SPECIALTIES.each do |x|
              - if x[0] != "General/Todas"
                %tr
                  %td= "#{x[0]}"
                  -# %td= user.doctors.where(speciality: x[0]).count
                  %td= Planning.includes(:doctor).where(:doctors => {speciality: x[0]}).count
                  %td= Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count
                  -# - byebug
                  %td= Planning.includes(:doctor).where(visited: false,:doctors => {speciality: x[0]}).count
                  
                  -# %td= number_to_percentage((user.visits.where(cycle: @cycle.name).count.to_f / user.plannings.count.to_f)*100, precision: 0)
                  %td    
                    .progress-bar.ui.teal.progress.small{"data-percent" => "#{number_to_percentage((Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(:doctors => {speciality: x[0]}).count.to_f)*100, precision: 0).to_i}"}
                      .bar
                      .label 
                        - if ((Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(:doctors => {speciality: x[0]}).count.to_f)*100).nan?
                          0 %
                        - else  
                          = number_to_percentage((Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(:doctors => {speciality: x[0]}).count.to_f)*100, precision: 0)
          %tfoot
            %tr.warning
              %td Totales
              %td 
                = Planning.includes(:doctor).where.not(doctor: nil).count
              %td
                = Planning.includes(:doctor).where(visited: true).where.not(doctor: nil).count
              %td
                = Planning.includes(:doctor).where(visited: false).where.not(doctor: nil).count
              %td
                .progress-bar.ui.teal.progress.small{"data-percent" => "#{number_to_percentage((Planning.includes(:doctor).where(visited: true).where.not(doctor: nil).count.to_f / Planning.includes(:doctor).where.not(doctor: nil).count.to_f)*100, precision: 0).to_i}"}
                  .bar
                  .label 
                    - if ((Planning.includes(:doctor).where(visited: true).where.not(doctor: nil).count.to_f / Planning.includes(:doctor).where.not(doctor: nil).count.to_f)*100).nan?
                      0 %
                    - else  
                      = number_to_percentage((Planning.includes(:doctor).where(visited: true).where.not(doctor: nil).count.to_f / Planning.includes(:doctor).where.not(doctor: nil).count.to_f)*100, precision: 0)


      -# old table --------------

    
      -# %table.ui.sortable.celled.table.striped.blue.compact
      -#   %thead
      -#     %tr
      -#       %th Especialidad
      -#       %th Cant.

      -#   %tbody
      -#     - Doctor::SPECIALTIES.each do |x|
      -#       - if x[0] != "General/Todas"
      -#         %tr
      -#           %td.collapsing= "#{x[0]}"
      -#           %td
      -#             .progress-bar.ui.progress.register{"data-total" => "#{Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count}", 
      -#                                                "data-percent" => "#{number_to_percentage((Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(:doctors => {speciality: x[0]}).count.to_f)*100, precision: 0).to_i}", 
      -#                                                class: "#{Doctor::COLORS.sample}"}
      -#               -# -byebug
      -#               .bar
      -#                 .progress
      -#               .label
      -#                 -# = Planning.includes(:doctor).where(cycle_id: Cycle.last.id , :doctors => {speciality: x[0]}).count
      -#                 = Planning.includes(:doctor).where(visited: true, :doctors => {speciality: x[0]}).count
      -#                 de
      -#                 = Planning.includes(:doctor).where(:doctors => {speciality: x[0]}).count
      -#                 -# = Doctor.where(speciality: x[0]).count

    -1.times do 
      %br

    - if current_user.admin  
      .ui.dividing.header.blue
        Especialidades por Usuario  

      .ui.flui.selection.dropdown#register-users
        %input{:name => "user", :type => "hidden"}/
        %i.dropdown.icon
        .default.text Selecciona un Usuario
        .menu
          - @users.each do |x|
            - next if x.admin || x.doctors.empty?
            .item{"data-value" => "#{x.id}"}
              = x.username

      .ui.container
        %br
        - @users.each do |user|
          - next if user.admin || user.doctors.empty?
          
          .ui.tab{"data-tab" => "#{user.username}"}
            %table.ui.sortable.celled.table.striped.blue.gridtable{:style => "margin-bottom: 0px;"}
              %thead
                %tr
                  %th Especialidad
                  %th Cant. de Doctores
                  %th Vistos
                  %th Por Visitar
                  %th.six.wide % Cumplido                    
            %div.scrollx{:style => "overflow-y:scroll; height: 600px; width: 101%;"}        
              %table.ui.sortable.celled.table.striped.blue.gridtable{:style => "border-top: none;"}
                %thead{:style => "visibility: hidden"}
                  %tr
                    %th Especialidad
                    %th Cant. de Doctores
                    %th Vistos
                    %th Por Visitar
                    %th.six.wide % Cumplido
                %tbody
                  - Doctor::SPECIALTIES.each do |x|
                    - if x[0] != "General/Todas"
                      %tr
                        %td= "#{x[0]}"
                        -# %td= user.doctors.where(speciality: x[0]).count
                        %td= Planning.includes(:doctor).where(user_id: user.id, :doctors => {speciality: x[0]}).count
                        %td= Planning.includes(:doctor).where(visited: true, user_id: user.id, :doctors => {speciality: x[0]}).count
                        -# - byebug
                        %td= Planning.includes(:doctor).where(visited: false, user_id: user.id, :doctors => {speciality: x[0]}).count
                        
                        -# %td= number_to_percentage((user.visits.where(cycle: @cycle.name).count.to_f / user.plannings.count.to_f)*100, precision: 0)
                        %td    
                          .progress-bar.ui.teal.progress.small{"data-percent" => "#{number_to_percentage((Planning.includes(:doctor).where(visited: true, user_id: user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: user.id, :doctors => {speciality: x[0]}).count.to_f)*100, precision: 0).to_i}"}
                            .bar
                            .label 
                              - if ((Planning.includes(:doctor).where(visited: true, user_id: user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: user.id, :doctors => {speciality: x[0]}).count.to_f)*100).nan?
                                0 %
                              - else  
                                = number_to_percentage((Planning.includes(:doctor).where(visited: true, user_id: user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: user.id, :doctors => {speciality: x[0]}).count.to_f)*100, precision: 0)
                




                            
    - else

      %table.ui.sortable.celled.table.striped.blue.gridtable{:style => "margin-bottom: 0px;"}
        %thead
          %tr
            %th Especialidad
            %th Cant. de Doctores
            %th Vistos
            %th Por Visitar
            %th.six.wide % Cumplido                    
      %div.scrollx{:style => "overflow-y:scroll; height: 600px; width: 101%;"}        
        %table.ui.sortable.celled.table.striped.blue.gridtable{:style => "border-top: none;"}
          %thead{:style => "visibility: hidden"}
            %tr
              %th Especialidad
              %th Cant. de Doctores
              %th Vistos
              %th Por Visitar
              %th.six.wide % Cumplido
          %tbody
            - Doctor::SPECIALTIES.each do |x|
              - if x[0] != "General/Todas"
                %tr
                  %td= "#{x[0]}"
                  -# %td= user.doctors.where(speciality: x[0]).count
                  %td= Planning.includes(:doctor).where(user_id: current_user.id, :doctors => {speciality: x[0]}).count
                  %td= Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count
                  -# - byebug
                  %td= Planning.includes(:doctor).where(visited: false, user_id: current_user.id, :doctors => {speciality: x[0]}).count
                  
                  -# %td= number_to_percentage((user.visits.where(cycle: @cycle.name).count.to_f / user.plannings.count.to_f)*100, precision: 0)
                  %td    
                    .progress-bar.ui.teal.progress.small{"data-percent" => "#{number_to_percentage((Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f)*100, precision: 0).to_i}"}
                      .bar
                      .label 
                        - if ((Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f)*100).nan?
                          0 %
                        - else  
                          = number_to_percentage((Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f)*100, precision: 0)
          




      -# old table
      -# %table.ui.sortable.celled.table.striped.blue.compact
      -#   %thead
      -#     %tr
      -#       %th Especialidad
      -#       %th Doctores visitados

      -#   %tbody
      -#     - Doctor::SPECIALTIES.each do |x|
      -#       - if x[0] != "General/Todas"
      -#         %tr
      -#           %td.collapsing= "#{x[0]}"
      -#           %td
      -#             .progress-bar.ui.progress.register{"data-total" => "#{Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count}", 
      -#                                               "data-percent" => "#{number_to_percentage((Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f / Planning.includes(:doctor).where(user_id: current_user.id, :doctors => {speciality: x[0]}).count.to_f)*100, precision: 0).to_i}", 
      -#                                               class: "#{Doctor::COLORS.sample}"}
      -#               -# -byebug
      -#               .bar
      -#                 .progress
      -#               .label
      -#                 = Planning.includes(:doctor).where(visited: true, user_id: current_user.id, :doctors => {speciality: x[0]}).count
      -#                 de
      -#                 -# = current_user.doctors.where(speciality: x[0]).count
      -#                 = Planning.includes(:doctor).where(user_id: current_user.id, :doctors => {speciality: x[0]}).count
